@page "/authors/view/{id}"

@inject IAuthorRepository _repo
@inject NavigationManager _navManager

<h3>Author Details</h3>

@if (Model == null)
{
    <LoadingMessage Message="Loading Author" />
}
else
{
    <div class="col-md-4">
        <h4>Author Details</h4>
        <table class="table table-responsive">
            <tr>
                <td>First Name</td>
                <td>@Model.FirstName</td>
            </tr>
            <tr>
                <td>Last Name</td>
                <td>@Model.LastName</td>
            </tr>
            <tr>
                <td>Biogrophy</td>
                <td>@Model.Bio</td>
            </tr>
        </table>
        <br />

        @if (Model.Books == null || Model.Books.Count < 1)
        {
            <div class="alert alert-dismissible alert-secondary">
                No books for this author.
            </div>
        }
        else
        {
            <div class="card" style="width: 18rem;">
                <div class="card-header">
                    <h4>Author Books</h4>
                </div>
                <ul class="list-group list-group-flush">
                    @foreach (var book in Model.Books)
                    {
                        <li class="list-group-item">@book.Title - @book.Price </li>
                    }
                </ul>
            </div>
        }
    </div>
}
<br />
<AuthorizeView Roles="Administrator">
    <button @onclick="GoToEdit" class="btn btn-outline-warning">
        <span class="oi oi-pencil"></span>
        Edit Book
    </button>
    <button @onclick="GoToDelete" class="btn btn-outline-danger">
        <span class="oi oi-circle-x"></span>
        Delete Book
    </button>
</AuthorizeView>
<button @onclick="BackToList" class="btn btn-outline-secondary">
    <span class="oi oi-media-skip-backward"></span>
    Back To List
</button>

@code {
    [Parameter]
    public string Id { get; set; }

    private Author Model = new Author();

    protected async override Task OnInitializedAsync()
    {
        int _id = int.Parse(Id);
        Model = await _repo.Get(Endpoints.AuthorsEndpoint, _id);
    }

        private void BackToList()
        {
            _navManager.NavigateTo("/authors/");
        }

        private void GoToEdit()
        {
            _navManager.NavigateTo($"/authors/edit/{Model.Id}");
        }

        private void GoToDelete()
        {
            _navManager.NavigateTo($"/authors/delete/{Model.Id}");
        }
}